[
    {
        "id": "seed_task_0",
        "name": "python_code_review_01",
        "instruction": "Perform a code review on the given Python code file to improve the code in terms of readability, uniformity, understandability, correctness, performance, and security.",
        "instances": [
            {
                "input": "```python\ndef Add_numbers(a,b):\n    Sum=a+b\n    return Sum\n\ndef Multiply_numbers(a, b):\n    Product = a*b\n    Return Product\n\ndef subtract_numbers(a, b):\n    difference = a - b\n    return difference\n\ndef divide_numbers(a, b):\n    if b != 0:\n        quotient = a / b\n        return quotient\n    else:\n        print(\"Error: Cannot divide by zero\")\n\nx = 5\ny = 0\n\nresult1 = Add_numbers(x, y)\nprint(\"Sum:\", result1)\n\nresult2 = Multiply_numbers(x, y)\nprint(\"Product:\", result2)\n\nresult3 = subtract_numbers(x, y)\nprint(\"Difference:\", result3)\n\nresult4 = divide_numbers(x, y)\nprint(\"Quotient:\", result4)\n```",
                "output": "- Readability (Status: NEGATIVE)\n  - Function names should follow `lower_case_with_underscore` naming convention.\n  - Inconsistent capitalization of variable names.\n  - Inconsistent capitalization of return statements.\n  - Missing space before and after operators.\n- Uniformity (Status: NEGATIVE)\n  - Inconsistent spacing around operators.\n  - Inconsistent capitalization of function names.\n- Understandability (Status: NEGATIVE)\n  - The purpose of each function and its parameters is not well-documented.\n  - The error handling for dividing by zero is not clearly explained in the code.\n- Correctness (Status: POSITIVE)\n  - The code appears to be correct.\n- Performance (Status: POSITIVE)\n  - No performance issues identified.\n- Security (Status: POSITIVE)\n  - No security issues identified."
            }
        ],
        "is_classification": false
    },
    {
        "id": "seed_task_1",
        "name": "python_code_review_02",
        "instruction": "Perform a code review on the given Python code file to identify issues related to readability, uniformity, understandability, correctness, performance, and security.",
        "instances": [
            {
                "input": "```python\nimport random,sys\ndef  lottery_numbers(n):\nnumbers=[]\nfor _ in range(n):\n    num=random.randint(1,50)\nnumbers.append(num)\n  return numbers\ncount=10\nresult = lottery_numbers(count)\nprint(\"Here are your lucky numbers:\")\nfor num in result:\nprint(num)\n```",
                "output": "- Readability (Status: NEGATIVE)\n  - Inconsistent indentation makes the code hard to read and follow the block structure.\n  - Lack of proper spacing around operators and after commas reduces readability.\n- Uniformity (Status: NEGATIVE)\n  - The code uses both tabs and spaces for indentation, leading to inconsistency.\n  - Inconsistent spacing after colons and around operators throughout the code.\n- Understandability (Status: NEGATIVE)\n  - The variable names are not descriptive, making it difficult to understand their purpose.\n  - The function lacks proper comments or docstrings to explain its functionality.\n- Correctness (Status: NEGATIVE)\n  - The indentation inside the function definition is incorrect, causing a syntax error.\n  - The `return` statement is improperly aligned, causing the function to return after the first iteration.\n- Performance (Status: POSITIVE)\n  - No specific performance issues found in the provided code.\n- Security (Status: POSITIVE)\n  - No security issues found in the provided code."
            }
        ],
        "is_classification": false
    },
    {
        "id": "seed_task_2",
        "name": "python_code_review_03",
        "instruction": "Perform a code review on the given Python code file to improve factors such as readability, uniformity, understandability, correctness, performance, and security.",
        "instances": [
            {
                "input": "```python\nimport requests\ndef get_data(url):\n    response = requests.get(url)\n    data = response.json()\n    return data\ndef process_data(data):\n    result = []\n    for item in data:\n        if 'name' in item:\n            name = item['name']\n            result.append(name)\n    return result\ndef print_names(names):\n    for name in names:\n        print(\"Name:\", name)\nif __name__ == '__main__':\n    api_url = 'https://api.example.com/data'\n    data = get_data(api_url)\n    names = process_data(data)\n    print_names(names)\n```",
                "output": "- Readability (Status: NEGATIVE)\n  - Rename variable `url` in `get_data` function to `api_url` for consistency.\n  - Add docstrings to functions `get_data`, `process_data`, and `print_names` to explain their purpose.\n  - Use meaningful variable names instead of generic names like item in the `process_data` function.\n- Uniformity (Status: POSITIVE)\n  - The code follows PEP 8 style guidelines consistently.\n- Understandability (Status: POSITIVE)\n  - The code has clear and concise logic.\n  - Functions have descriptive names indicating their purpose.\n- Correctness (Status: POSITIVE)\n  - The code seems correct and functional, no apparent logical errors or bugs.\n- Performance (Status: POSITIVE)\n  - The code does not perform any heavy computational tasks that would - significantly impact performance.\n- Security (Status: POSITIVE)\n  - No security concerns observed in the code."
            }
        ],
        "is_classification": false
    },
    {
        "id": "seed_task_3",
        "name": "javascript_code_review_01",
        "instruction": "Perform a code review on the given JavaScript code file to identify issues related to readability, uniformity, understandability, correctness, performance, and security.",
        "instances": [
            {
                "input": "```javascript\nlet a = 10;\nlet b=20;\nlet c = 30;\nfunction add(x,y,z){\n  let result = x+y+z;\n    return result;\n}\nlet sum = add(a,b,c);\nconsole.log(\"The sum is:\"+sum);\nconst myList=[1,2,3,4,5];\nfor(let i=0;i<myList.length;i++){\nlet item=myList[i];\nconsole.log(item)\n}\n```",
                "output": "- Readability (Status: NEGATIVE)\n  - Inconsistent spacing around assignment operators and after commas reduces readability.\n  - Inconsistent use of indentation makes the code harder to read and understand.\n- Uniformity (Status: NEGATIVE)\n  - The spacing around assignment operators is not consistent.\n  - The indentation inside the `add` function is not uniform.\n- Understandability (Status: NEGATIVE)\n  - The variable names are not descriptive, making it difficult to understand their purpose.\n  - The function name `add` is not self-explanatory about what it does.\n- Correctness (Status: POSITIVE)\n  - The code appears to be correct in terms of syntax and logic.\n- Performance (Status: POSITIVE)\n  - No specific performance-related issues found in the provided code.\n- Security (Status: POSITIVE)\n  - No security issues found in the provided code."
            }
        ],
        "is_classification": false
    },
    {
        "id": "seed_task_4",
        "name": "javascript_code_review_02",
        "instruction": "Perform a code review on the provided JavaScript code file and identify any issues related to readability, uniformity, understandability, correctness, performance, and security.",
        "instances": [
            {
                "input": "```javascript\nfunction A(f){\n    const B = [1,2,3];\n    const c = B.length;\n    let D = 0;\n    for (let i=0;i<c;i++){\n        D+=B[i];\n    }\n    const e=f+D;\n    return e;\n}\nfunction calculate(x, y){\n    if(x > 10){\n        return y * 2;\n    }\n    else{\n        if(y < 5){\n            return x * y;\n        }\n        else{\n            return x + y;\n        }\n    }\n}\nfunction divide(a, b){\n    if(b !== 0){\n        return a / b;\n    }\n    else{\n        return \"Error: Division by zero\";\n    }\n}\nfunction validatePassword(password){\n    if(password.length < 8){\n        return false;\n    }\n    else{\n        return true;\n    }\n}\n```",
                "output": "- Readability (Status: NEGATIVE)\n  - The code lacks consistent formatting.\n  - Variable and function names are not descriptive.\n  - Inconsistent capitalization of function names.\n- Uniformity (Status: NEGATIVE)\n  - The code does not follow a consistent naming convention for variables and functions.\n- Understandability (Status: NEGATIVE)\n  - NEGATIVEly named variables and functions make it difficult to understand their purpose.\n  - Lack of comments and documentation makes it challenging to grasp the code's intention.\n- Correctness (Status: POSITIVE)\n  - No apparent issues found related to correctness.\n- Performance (Status: POSITIVE)\n  - No apparent issues found related to performance.\n- Security (Status: NEGATIVE)\n  - The password validation function lacks proper security measures, such as checking for common weak passwords or enforcing additional complexity requirements."
            }
        ],
        "is_classification": false
    },
    {
        "id": "seed_task_5",
        "name": "javascript_code_review_03",
        "instruction": "Perform a code review on the provided JavaScript code file. Evaluate the code based on the factors of readability, uniformity, understandability, correctness, performance, and security.",
        "instances": [
            {
                "input": "```javascript\nfunction  calculateSum() {\nlet a = 5; let b = 10; let c = 15;\nvar sum  =  a + b + c;\nconsole.log(\"The sum is: \" + sum);\n}\nfunction calculateProduct() {\n  var a = 5;\n  var b = 10;\n  var c = 15;\n  \n  var product = a * b * c;\n  \n  console.log(\"The product is: \" + product);\n}\nfunction calculateAverage() {\n  let a = 5;\n  let b = 10;\n  let c = 15;\n  \n  let average = (a + b + c) / 3;\n  \n  console.log(\"The average is: \" + average);\n}\ncalculateSum();\ncalculateProduct();\ncalculateAverage();\n```",
                "output": "- Readability (Status: NEGATIVE)\n  - Inconsistent use of variable declaration keywords (`let` and `var`).\n  - Inconsistent placement of semicolons at the end of lines.\n  - Lack of proper spacing between operators and operands reduces readability.\n- Uniformity (Status: NEGATIVE)\n  - The code lacks a consistent coding style throughout, resulting in varying indentation, spacing, and naming conventions.\n  - Inconsistent use of single and double quotes for string literals.\n  - Inconsistent use of `let` and `var` for variable declaration.\n- Understandability (Status: POSITIVE)\n  - The code is relatively straightforward and easy to understand.\n- Correctness (Status: POSITIVE)\n  - The code appears to be correct in terms of syntax and logic.\n- Performance (Status: POSITIVE)\n  - No performance-related issues were found in the code.\n- Security (Status: POSITIVE)\n  - No security vulnerabilities were found in the code."
            }
        ],
        "is_classification": false
    },
    {
        "id": "seed_task_6",
        "name": "html_css_code_review_01",
        "instruction": "Perform a code review on the given HTML/CSS code file and provide feedback on the following factors: readability, uniformity, understandability, correctness, performance, and security.",
        "instances": [
            {
                "input": "```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>Sample Page</title>\n    <style>\n        body {\n            font-family: Arial, sans-serif;\n            font-size: 14px;\n            color: #333;\n        }\n        \n        #header {\n            background-color: #ccc;\n            padding: 20px;\n        }\n        \n        #content {\n            margin-top: 50px;\n            padding: 20px;\n        }\n        \n        .box {\n            background-color: #f0f0f0;\n            border: 1px solid #ccc;\n            padding: 10px;\n            margin-bottom: 20px;\n        }\n        \n        .box h2 {\n            font-size: 18px;\n            margin-bottom: 10px;\n        }\n        \n        .box p {\n            line-height: 1.5;\n        }\n        \n        .box .button {\n            background-color: #333;\n            color: #fff;\n            padding: 5px 10px;\n            border-radius: 3px;\n            text-decoration: none;\n        }\n    </style>\n</head>\n<body>\n    <div id=\"header\">\n        <h1>Sample Page</h1>\n    </div>\n    <div id=\"content\">\n        <div class=\"box\">\n            <h2>Introduction</h2>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec fringilla placerat pharetra.</p>\n        </div>\n        <div class=\"box\">\n            <h2>About</h2>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed iaculis mollis lorem, in congue orci convallis nec.</p>\n            <a href=\"#\" class=\"button\">Learn More</a>\n        </div>\n    </div>\n</body>\n</html>\n```",
                "output": "- Readability (Status: NEGATIVE)\n  - Consider using proper line breaks and spacing between elements for better readability.\n  - Avoid inline styling and use CSS classes instead for better separation of concerns.\n- Uniformity (Status: POSITIVE)\n  - The code demonstrates uniformity in terms of naming conventions and coding style.\n- Understandability (Status: POSITIVE)\n  - The code is relatively easy to understand and follow.\n- Correctness (Status: POSITIVE)\n  - The code appears to be correct syntactically.\n- Performance (Status: POSITIVE)\n  - No performance issues found in the given code.\n- Security (Status: POSITIVE)\n  - No security issues found in the given code."
            }
        ],
        "is_classification": false
    },
    {
        "id": "seed_task_7",
        "name": "html_css_code_review_02",
        "instruction": "Perform a code review on the given HTML/CSS code file to identify issues related to readability, uniformity, understandability, correctness, performance, and security.",
        "instances": [
            {
                "input": "```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>My Website</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"styles.css\">\n</head>\n<body>\n    <div id=\"header\"><h1>Welcome to My Website</h1>\n    <div class=\"content\">\n    <p>This is some text with no formatting.</p>\n    <div class=\"content\">\n      <p>More text in another div.</p>\n    </div>\n    <div id=\"footer\"><p>Contact: contact@website.com</p></div>\n</body>\n</html>\n```",
                "output": "- Readability (Status: NEGATIVE)\n  - Inconsistent indentation makes the code hard to read and understand.\n  - Lack of proper spacing between tags and elements reduces readability.\n- Uniformity (Status: NEGATIVE)\n  - Inconsistent use of indentation throughout the code.\n  - Inconsistent spacing inside elements and around tags.\n- Understandability (Status: NEGATIVE)\n  - The lack of proper formatting and indentation makes it difficult to grasp the structure of the code.\n  - Unclear hierarchy due to improper nesting of div elements and missing closing tags.\n- Correctness (Status: NEGATIVE)\n  - The first div with the ID \"header\" is not closed properly.\n  - The second div with the class \"content\" is not closed correctly.\n- Performance (Status: POSITIVE)\n  - No specific performance-related issues found in the provided code.\n- Security (Status: POSITIVE)\n  - No security issues found in the provided code."
            }
        ],
        "is_classification": false
    },
    {
        "id": "seed_task_8",
        "name": "html_css_code_review_03",
        "instruction": "Perform a code review on the provided HTML/CSS code file and identify issues related to the factors of readability, uniformity, understandability, correctness, performance, and security.",
        "instances": [
            {
                "input": "```html\n<!DOCTYPE html>\n<html>\n<head>\n    <title>My Website</title>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"styles.css\">\n</head>\n<body>\n    <div id=\"container\">\n      <h1>Heading</h1>\n      <p class=\"paragraph\">This paragraph has poor readability</p>\n      <div class=\"content\">\n      <p>Content Block 1</p>\n      </div>\n      <div class=\"content\">\n      <p>Content Block 2</p>\n      </div>\n      <div class=\"content\">\n      <p>Content Block 3</p>\n      </div>\n      <div class=\"content\">\n      <p>Content Block 4</p>\n      </div>\n      <footer>\n      <p>Contact us at contact@example.com</p>\n      </footer>\n    </div>\n</body>\n</html>\n```",
                "output": "- Readability (Status: NEGATIVE)\n  - The class name \"paragraph\" does not provide enough context about its purpose. Consider using a more descriptive name like \"content-text\" to enhance readability.\n  - The lack of proper indentation makes it difficult to understand the hierarchy and structure of the code. Properly indent the elements within their parent containers for better readability.\n- Uniformity (Status: NEGATIVE)\n  - Inconsistent indentation is present throughout the code. Ensure that all elements within their parent containers are indented consistently with the same number of spaces or tabs for better uniformity.\n- Understandability (Status: NEGATIVE)\n  - The heading \"Heading\" lacks clarity on its purpose. Consider using a more meaningful title, such as \"Welcome to Our Website,\" to enhance understandability for users and search engines.\n- Correctness (Status: POSITIVE)\n  - No major correctness issues found in the code. The structure and syntax of the HTML code are valid.\n- Performance (Status: POSITIVE)\n  - No performance-related issues found in the code. The code's performance is not affected by its current state.\n- Security (Status: POSITIVE)\n  - No security vulnerabilities were identified in the code. The code does not expose any potential security risks."
            }
        ],
        "is_classification": false
    }
]